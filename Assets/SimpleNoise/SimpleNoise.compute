#pragma kernel NoiseKernel

RWTexture2D<float4> Result;

// Hash function from H. Schechter & R. Bridson, goo.gl/RXiKaH
// hash(i, j, k) = H(i xor H(j xor H(k))) mod 128, 32 bit integers
uint Hash(uint s)
{
    s ^= 2747636419u;
    s *= 2654435769u;
    s ^= s >> 16;
    s *= 2654435769u;
    s ^= s >> 16;
    s *= 2654435769u;
    return s;
}

float Random(uint seed)
{
    return float(Hash(seed)) / 4294967295.0; // 2^32-1
}

[numthreads(8, 8, 1)]
void NoiseKernel(uint2 id : SV_DispatchThreadID)
{
    float w, h;
    Result.GetDimensions(w, h);
    Result[id.xy] = Random(id.x + id.y * w);
}